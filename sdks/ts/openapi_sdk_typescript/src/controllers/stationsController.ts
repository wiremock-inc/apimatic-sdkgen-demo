/**
 * Train Travel APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  StationsResponse,
  stationsResponseSchema,
} from '../models/stationsResponse';
import { number, optional, string } from '../schema';
import { BaseController } from './baseController';
import { ProblemError } from '../errors/problemError';

export class StationsController extends BaseController {
  /**
   * Returns a paginated and searchable list of all train stations.
   *
   * @param page        The page number to return
   * @param coordinates The latitude and longitude of the user's location, to narrow down the search results
   *                              to sites within a proximity of this location.
   * @param search      A search term to filter the list of stations by name or address.
   * @return Response from the API call
   */
  async getStations(
    page?: number,
    coordinates?: string,
    search?: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<StationsResponse>> {
    const req = this.createRequest('GET', '/stations');
    const mapped = req.prepareArgs({
      page: [page, optional(number())],
      coordinates: [coordinates, optional(string())],
      search: [search, optional(string())],
    });
    req.query('page', mapped.page);
    req.query('coordinates', mapped.coordinates);
    req.query('search', mapped.search);
    req.throwOn(400, ProblemError, 'Bad Request');
    req.throwOn(401, ProblemError, 'Unauthorized');
    req.throwOn(403, ProblemError, 'Forbidden');
    req.throwOn(429, ProblemError, 'Too Many Requests');
    req.throwOn(500, ProblemError, 'Internal Server Error');
    req.authenticate([{ oAuth2: true }]);
    return req.callAsJson(stationsResponseSchema, requestOptions);
  }
}
