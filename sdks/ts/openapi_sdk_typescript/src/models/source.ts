/**
 * Train Travel APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { bigint, number, object, optional, Schema, string } from '../schema';
import { AccountTypeEnum, accountTypeEnumSchema } from './accountTypeEnum';
import { ObjectEnum, objectEnumSchema } from './objectEnum';

/** The payment source to take the payment from. This can be a card or a bank account. Some of these properties will be hidden on read to protect PII leaking. */
export interface Source {
  object?: ObjectEnum;
  /** Cardholder's full name as it appears on the card. */
  name?: string;
  /** The card number, as a string without any separators. On read all but the last four digits will be masked for security. */
  number?: string;
  /** Card security code, 3 or 4 digits usually found on the back of the card. */
  cvc?: number;
  /** Two-digit number representing the card's expiration month. */
  expMonth?: bigint;
  /** Four-digit number representing the card's expiration year. */
  expYear?: bigint;
  addressLine1?: string;
  addressLine2?: string;
  addressCity?: string;
  addressCountry?: string;
  addressPostCode?: string;
  /** The sort code for the bank account, in string form. Must be a six-digit number. */
  sortCode?: string;
  /** The type of entity that holds the account. This can be either `individual` or `company`. */
  accountType?: AccountTypeEnum;
  /** The name of the bank associated with the routing number. */
  bankName?: string;
  /** Two-letter country code (ISO 3166-1 alpha-2). */
  country?: string;
}

export const sourceSchema: Schema<Source> = object({
  object: ['object', optional(objectEnumSchema)],
  name: ['name', optional(string())],
  number: ['number', optional(string())],
  cvc: ['cvc', optional(number())],
  expMonth: ['exp_month', optional(bigint())],
  expYear: ['exp_year', optional(bigint())],
  addressLine1: ['address_line1', optional(string())],
  addressLine2: ['address_line2', optional(string())],
  addressCity: ['address_city', optional(string())],
  addressCountry: ['address_country', optional(string())],
  addressPostCode: ['address_post_code', optional(string())],
  sortCode: ['sort_code', optional(string())],
  accountType: ['account_type', optional(accountTypeEnumSchema)],
  bankName: ['bank_name', optional(string())],
  country: ['country', optional(string())],
});
